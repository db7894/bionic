name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:

    # TODO Consider running on macos-latest as well.
    runs-on: ubuntu-latest
    # Just in case we start having to pay for our CI compute costs, it's probably wise
    # to have a time limit.
    timeout-minutes: 60
    strategy:
      # Keep running all test configurations, even if one of them fails. This is helpful
      # because if one configuration fails, it's useful to see whether the other ones
      # fail too. (This helps diagnose tests that are flaky or specific to one Python
      # version.)
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        include:
          - python-version: 3.6
            shard-id: 0
          - python-version: 3.7
            shard-id: 1
          - python-version: 3.8
            shard-id: 2

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install graphviz
        pip install --upgrade --upgrade-strategy eager '.[dev]'
        # This prints out all installed package versions, which may help for debugging
        # build failures.
        pip freeze
    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Lint with flake8 and black
      run: |
        flake8
        black --check .
    - name: Run baseline tests
      # Running GCS tests in CI costs less than a dollar per day on average.
      run: |
        pytest --bucket=${{ secrets.GCP_BUCKET }}
    - name: Run extra tests (sharded)
      # Running each test on each Python version is expensive, so we compromise: we run
      # the baseline tests above on each version, since they're fast and hopefully
      # comprehensive enough to shake out any version-specific bugs; and we run each of
      # the other tests on just one Python version, reducing the total build time.
      run: |
        pytest --bucket=${{ secrets.GCP_BUCKET }} --parallel --slow -m 'not baseline' --num-shards 3 --shard-id ${{matrix.shard-id}}
